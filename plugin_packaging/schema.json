{
"collections":[
      {
         "fields":[
            {
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "project",
               "field_name":"project_id",
               "desc": "ObjectID of the project to which this issue system belongs"
            },
            {
               "type":"StringType",
               "logical_type":"URL",
               "field_name":"url",
               "desc": "URL of the pull request system (e.g. https://api.github.com/repos/apache/commons-validator/pulls)"
            },
            {
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"last_updated",
               "desc": "Date on which data was gathered the last time from this system"
            }
         ],
         "desc": "Pull request system of the project (e.g. Github)",
         "collection_name":"pull_request_system"
      },
      {
         "fields":[
            {
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {
               "type":"StringType",
               "logical_type":"Other",
               "field_name":"email",
               "desc": "Email address of the person"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"name",
               "desc": "Name of the person"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"username",
               "desc": "Username of the person"
            }
         ],
         "desc": "This collection contains all persons that worked within the project (e.g., contributing a commit)",
         "collection_name":"people"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "pull_request_system",
               "field_name":"pull_request_system_id",
               "desc": "ObjectID that links to the pull request system to which this pull request belongs"
            },
            {  
               "type":"StringType",
               "logical_type":"ID",
               "field_name":"external_id",
               "desc": "ExternalID of the pull request"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"title",
               "desc": "Title of the pull request"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"description",
               "desc": "Description of the pull request"
            },
            {  
               "type":"BooleanType",
               "logical_type":"Other",
               "field_name":"is_draft",
               "desc": "True if the pull request is a draft"
            },
            {  
               "type":"BooleanType",
               "logical_type":"Other",
               "field_name":"is_locked",
               "desc": "True if the pull request is locked"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"lock_reason",
               "desc": "Reason for locking the pull request"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"author_association",
               "desc": "Author association, e.g., owner, collaborator"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"created_at",
               "desc": "Date on which the pull request was created"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"updated_at",
               "desc": "Date on which the pull request was updated"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"merged_at",
               "desc": "Date on which the pull request was merged"
            },
            {
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"creator_id",
               "desc": "ObjectID that links to an entry in the people collection, which is the creator of the pull request"
            },
            {
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"assignee_id",
               "desc": "ObjectID that links to an entry in the people collection, which is the assignee of the pull request"
            },
            
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"issue_type",
               "desc": "Issue type (e.g. Bug, Enhancement, etc.)"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"priority",
               "desc": "Priority of the issue (e.g., major, minor)"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"status",
               "desc": "Status of the issue (e.g. RESOLVED, NEW)"
            },
            {
               "sub_type": "StringType",
               "type":"ArrayType",
               "logical_type":"Name",
               "field_name":"affects_versions",
               "desc": "List of versions that are affected by this issue"
            },
            {
               "sub_type": "StringType",
               "type":"ArrayType",
               "logical_type":"Name",
               "field_name":"components",
               "desc": "List of components that are affected by this issue"
            },
            {
               "sub_type": "StringType",
               "type":"ArrayType",
               "logical_type":"Name",
               "field_name":"labels",
               "desc": "List of labels with which this issue is labled"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"resolution",
               "desc": "Resolution of the issue (if available)"
            },
            {
               "sub_type": "StringType",
               "type":"ArrayType",
               "logical_type":"Name",
               "field_name":"fix_versions",
               "desc": "List of versions with which the issue was fixed"
            },
            {
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"assignee_id",
               "desc": "ObjectID that links to an entry in the people collection, which is the assignee of the issue"
            },
            {
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "issue",
               "field_name":"parent_issue_id",
               "desc": "ObjectID that links to a parent issue (if available)"
            },
            {
               "type":"IntegerType",
               "logical_type":"Name",
               "field_name":"original_time_estimate",
               "desc": "Original estimation of the needed time to fix the issue (if available)"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"environment",
               "desc": "Environment which is affected by the issue"
            },
            {
               "type": "StringType",
               "logical_type": "Name",
               "field_name": "platform",
               "desc": "Platform which is affected by the issue (e.g. Windows)"
            },
            {
               "type": "BooleanType",
               "logical_type": "Other",
               "field_name": "is_pull_request",
               "desc": "True if this issue is also a pull request, e.g., for Github."
            }
         ],
         "desc": "This collection stores pull requests",
         "collection_name":"pull_request"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ID",
               "field_name":"external_id",
               "desc": "ExternalID of the issue that was given to it from the original issue tracking system"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "issue",
               "field_name":"issue_id",
               "desc": "ObjectID of the issue to which this comment belongs"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"author_id",
               "desc": "ObjectID that links to an entry in the people collection, which is the author of this comment"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"comment",
               "desc": "Actual comment body"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"created_at",
               "desc": "Date on which the comment was created"
            }
         ],
         "desc": "This collection holds all comments to all issues",
         "collection_name":"issue_comment"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"StringType",
               "logical_type":"ID",
               "field_name":"external_id",
               "desc": "ExternalID of the issue that was given to it from the original issue tracking system"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "issue",
               "field_name":"issue_id",
               "desc": "ObjectID of the issue to which this event belongs"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"created_at",
               "desc": "Date on which this event took place"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"status",
               "desc": "Status of the event. E.g., 'title' means, that the title of the issue was changed"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"author_id",
               "desc": "ObjectID that links to an entry in the people collection, which is the author of this event"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"old_value",
               "desc": "Old value of the issue at this time of the changed field"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"new_value",
               "desc": "New value of the issue after the event"
            }
         ],
         "desc": "This collection contains all events on all issues that were collected. An event is an action like the changing of a title or similar",
         "collection_name":"event"
      }
   ]
}